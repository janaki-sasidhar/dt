"""
Django settings for authservice project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'e8n*z#*i^dt+imf80ztm#yny+t%^5co422+^b$@b3=+ng)iry%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

AUTH_USER_MODEL = 'users.CustomUser'

def get_env_value(env_variable, default_value=None):
    try:
        return os.environ[env_variable]
    except KeyError:
        if default_value is not None:
            return default_value
        else:
            error_msg = "Set the {} environment variable".format(env_variable)
            raise ImproperlyConfigured(error_msg)


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
]


REST_FRAMEWORK = {
         'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'authservice.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'authservice.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
PRIVATE_KEY='''
-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDbsMB6tF6FhUrN
ZxNQ0m8fKKl5GMdnKpwXVRtc7bu71yLk+NST1AzisuxMFQNXnrJZQ8MBI+YcwTKa
8vDqT2+UQzdZqIdyrUD97k0a3TjI/veKcqkxlC7bd8kAZ717gCnM2tv5CtbUSNy4
SwrU8EhIdosOWagnWBkPk6y/oLNsXBcS8bkDkmT7jQXJ9WY+xHUv5Px8hyIGJRBA
3d0nTX7k2PTZfwK4dgtCAhHDDGVDZU5KmBMI5oY6BcBb0lhvJlDqsfhH07hwFkhs
TjMqZaLqw8yyKTuY+r1bmmxqnynE2AT/3x+fgemODFc4srJJ1Cbtj8CcuXEVAv2F
fgIwTuV1AgMBAAECggEADcpwqsM708HkSjSYP9CV7SzORq3Jhq5kEgrjpte9mzMM
G7eLEKSVEn4M21HOXee2Zmgci6vHPDLcjGGHwg2ugW4ewWAU8Jvzon0dFfyhHezz
eRtth5E3x8sjMQVSHbiT5yot+No3VigkwuTjDy7uOq5GWGZEagPbvuCUTYs2+CxJ
+BQoOV2b7ddkpfMtQGWvWGuDqMY5h0Ywuj4SotbDnzlLmEaa0jtR8tYcj9cy1QBb
+vuml+KURpBP68I494zNOeXXnhGFxG2crvV7MOc9f5dkZkgUVjD0naW3H4b0O0xI
Tq6O1E/Bv3NmQ7RlKmPng9E9EEMr/nwwrzbNZj04wQKBgQDvEVIo4ZIqYnZPMq35
AoMf8qIqYLs//Ak9N++pA1hola8g5EHne6SgKB2NGKHqRIRcX+WDxKKFJu5ekwF2
nloXtvZ+0WzWWGoQmF8sDmU+qyTZLboa/ueA/IAsNW48v9SnWT61AoFXWXnYIzlR
YjYsCux0KtrIaFWhM1vjHeoASQKBgQDrQBdEnpa8j6wmo7w2oIGRGD61d2avC37D
s0HIDvZNkTDe78AWVPQBTmh511vAzSXUthOozvU3I/r5/HR+JJGupGubEgWSMlgk
oGZec5b0cBopDW1Ytp5y2Cy/EpaeeVhEc4wJXH/CK0qUi6nccBNYXeyL8mpHf30/
u9NtyS1TzQKBgBM3fTc0Cp/FkmUDWeCuRwQGaOqnI+YcyFFXcbhQQIcHoTAvqOyG
j9Ef6GAzHrDKGSmju7s/zyCM5JRNlMyIJg3J8z52bx07tirnVJ8h+Rl0gF3EwzTw
UIOZyGPFV7siYGGjVtsN/H+c/aJWEoFsN5aKuj8MQtHhMSDoE/bJrMmhAoGBAMIT
A58WfiBdHpZZ6cHfNESxDbrDIDE0eIWWcqRKw6NGLl0cyQkjWJFjUAmEQyuRkq4i
76EJ635r7nchcDFIle7Psf4iJfpwEgtVUF6HWXeaq9pGO3k+XwU7ld6jxSJD1S/T
ayml57gV4tcdSSqUQ0FZavYhLNCDOp7Doy8lEoHZAoGBANJ64h/EkIw1E+CDk8sf
+RopZdro8KdJMywPMP5Ec+FDwRWYMB6eiyS2PR6gUIrotRiCiyb10sMWAGHnAKeD
i91jAnTrEgCnj99zGWJqnv4qqklkSWmdfKAwJbDOVObdRCcNXY5AUUbF8Qm+qqLX
DyCrbpxmeWb7MjE5/gf4aKYQ
-----END PRIVATE KEY-----'''
PUBLIC_KEY=''''
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA27DAerRehYVKzWcTUNJv
HyipeRjHZyqcF1UbXO27u9ci5PjUk9QM4rLsTBUDV56yWUPDASPmHMEymvLw6k9v
lEM3WaiHcq1A/e5NGt04yP73inKpMZQu23fJAGe9e4ApzNrb+QrW1EjcuEsK1PBI
SHaLDlmoJ1gZD5Osv6CzbFwXEvG5A5Jk+40FyfVmPsR1L+T8fIciBiUQQN3dJ01+
5Nj02X8CuHYLQgIRwwxlQ2VOSpgTCOaGOgXAW9JYbyZQ6rH4R9O4cBZIbE4zKmWi
6sPMsik7mPq9W5psap8pxNgE/98fn4HpjgxXOLKySdQm7Y/AnLlxFQL9hX4CME7l
dQIDAQAB
-----END PUBLIC KEY-----'''
AUTHENTICATION_BACKENDS = (
            "django.contrib.auth.backends.ModelBackend",
            )

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'RS512',
    'SIGNING_KEY': get_env_value("MB_SIGNING_KEY_RSA"),
    'VERIFYING_KEY': get_env_value("MB_VERIFYING_KEY_RSA"),
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

